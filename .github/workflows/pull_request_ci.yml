name: Pull Request CI

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - 'tests/**'
      - '.github/workflows/pull_request_ci.yml'

env:
  CARGO_TERM_COLOR: always

jobs:
  cross-platform-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: |
        cargo build --verbose

    - name: Run tests
      run: |
        cargo test
      env:
        RUST_BACKTRACE: 1

  linting_formatting_and_security_checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          ~/.cargo/bin
          target
        key: ${{ runner.os }}-cargo-lint-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: |
        cargo fmt --all -- --check

    - name: Clippy
      run: |
        cargo clippy --all-targets -- -D warnings
      
    - name: Install cargo-deny
      run: |
        # Use a version that supports 2024 edition
        if ! command -v cargo-deny &> /dev/null; then
          cargo install cargo-deny --version ">=0.16.2"
        fi
        
    - name: Run cargo deny
      run: |
        cargo deny check
