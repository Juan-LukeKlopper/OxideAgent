name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: OxideAgent-x86_64-unknown-linux-gnu.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: OxideAgent-x86_64-pc-windows-msvc.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            name: OxideAgent-x86_64-apple-darwin.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            name: OxideAgent-aarch64-apple-darwin.tar.gz

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Build Release
        run: |
          cargo build --target ${{ matrix.target }} --release
          
      - name: Package
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cd target/${{ matrix.target }}/release
            7z a ../../../${{ matrix.name }} OxideAgent.exe
            cd -
          else
            tar czf ${{ matrix.name }} -C target/${{ matrix.target }}/release OxideAgent
          fi

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}